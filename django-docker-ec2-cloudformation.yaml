AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Dockerized Django app on EC2 using CloudFormation.

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance

Resources:
  # IAM Role for EC2 Instance with Admin Access
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "EC2AdminAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "*"
                Resource: "*"

  # IAM Instance Profile for EC2 to attach the role
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: EC2InstanceRole

  # EC2 Instance Security Group to Allow SSH, HTTP, and HTTPS Traffic
  EC2InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH, HTTP, and HTTPS traffic"
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: "0.0.0.0/0"
        - IpProtocol: "tcp"
          FromPort: "443"
          ToPort: "443"
          CidrIp: "0.0.0.0/0"

  # EC2 Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: "t3.micro"
      KeyName: !Ref KeyName
      ImageId: "ami-03c2970bdb10a9e99"
      SecurityGroups:
        - !Ref EC2InstanceSecurityGroup
      IamInstanceProfile:
        Ref: EC2InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          # Update the system
          yum update -y
          
          # Install Docker
          amazon-linux-extras install docker
          service docker start
          usermod -a -G docker ec2-user
          
          # Install Docker Compose
          curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          
          # Pull your Dockerized Django app from GitHub 
          cd /home/ec2-user
          git clone https://github.com/hammoda711/dynamic-category-tree.git
          cd dynamic-category-tree

          # Run Docker Compose
          docker-compose up -d

Outputs:
  InstanceId:
    Description: "Instance ID"
    Value: !Ref EC2Instance

  PublicDNS:
    Description: "Public DNS of the EC2 instance"
    Value: !GetAtt EC2Instance.PublicDnsName
